pool:
  vmImage: 'ubuntu-latest'

steps:
  - script: docker pull derex/buildah
    displayName: 'Pull Buildah image'

  - task: 1ESLighthouseEng.PipelineArtifactCaching.RestoreCacheV1.RestoreCache@1
    inputs:
      keyfile: '.cache_id'
      targetfolder: 'cache'
      verbosity: 'Trace'
      vstsFeed: '557705d2-c711-44d3-8c33-70cd77097d2e'

  - script: |
      set -x
      docker run \
        --rm --privileged --security-opt="seccomp=unconfined" \
        --cap-add=ALL \
        -v /var/lib/containers/:/var/lib/containers/:rw,Z \
        -v /var/run/docker.sock:/var/run/docker.sock \
        -v $(pwd):$(pwd) \
        derex/buildah \
        bash -c "
          cd $(pwd)
          mkdir -p $(pwd)/cache/pip
          chown -R root:root $(pwd)/cache/pip
          pip3 install --cache-dir $(pwd)/cache/pip -r requirements_dev.txt
          pip3 install --cache-dir $(pwd)/cache/pip -r requirements.txt
          python3 setup.py install
          pip3 install pytest-azurepipelines
          pytest tests
          chown -Rv $(id -u) $(pwd)/cache
        "
    displayName: 'Run tests inside buildah image'

  - task: 1ESLighthouseEng.PipelineArtifactCaching.SaveCacheV1.SaveCache@1
    inputs:
      keyfile: '.cache_id'
      targetfolder: 'cache'
      verbosity: 'Trace'
      vstsFeed: '557705d2-c711-44d3-8c33-70cd77097d2e'
    condition: ne(variables['CacheRestored'], 'true')

